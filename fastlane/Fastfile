# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Alpha Build to Google Play"
  lane :beta do
    gradle(task: "clean bundleRelease")
    upload_to_play_store(
        track: 'alpha',
        skip_upload_apk: true,
        sync_image_upload: true
    )

    gradle(task: "assemble")
    amazon_app_submission(
        client_id: ENV['AMAZON_DEV_CLIENTID'],
        client_secret: ENV['AMAZON_DEV_SECRET'],
        app_id: "amzn1.devportal.mobileapp.fae1c668e01c49cd96c5719c4a8db1cb",
        apk_path: "./app/build/outputs/apk/release/app-release.apk",
        upload_apk: true,
        submit_for_review: true,
        changelogs_path: './fastlane/metadata/android/fr-FR/changelogs',
        upload_changelogs: true
    )

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  lane :release do
    previous_prod_build_number = google_play_track_version_codes()[0]
    previous_alpha_build_number = google_play_track_version_codes(track: "alpha")[0]
    nextVersion = [previous_prod_build_number, previous_alpha_build_number].max + 1
    UI.message("Next deployed version code will be: #{nextVersion} with number:" + ENV['VERSION'])

    increment_version_code(
      app_project_dir: '**/app',
      version_code: nextVersion
    )
    increment_version_name(
      app_project_dir: '**/app',
      version_name: ENV['VERSION']
    )

    gradle(task: "clean bundleRelease")
    upload_to_play_store(
        skip_upload_apk: true,
        sync_image_upload: true
    )

    gradle(task: "assemble")

    set_github_release(
      repository_name: "octera/Nimilou",
      api_token: ENV["GITHUB_TOKEN"],
      name: ENV['VERSION'],
      tag_name: "release/" + ENV['VERSION'],
      commitish: "master",
      description: (File.read("fastlane/metadata/android/fr-FR/changelogs/default.txt") rescue "No changelog provided"),
      upload_assets: lane_context[SharedValues::GRADLE_ALL_APK_OUTPUT_PATHS]
    )
  end
end
